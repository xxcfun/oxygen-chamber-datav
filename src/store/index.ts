import { createStore, Store, useStore as useVuexStore } from 'vuex'import { IRootState, IStoreType } from './types'import { getData, getStatus, getTime, getProgramme } from '@/service/main/main'const store = createStore<IRootState>({  state() {    return {      data: {},      status: {},      time: {},      programme: {}    }  },  mutations: {    changeData(state, data: any) {      state.data = data    },    changeStatus(state, status: any) {      state.status = status    },    changeProgramme(state, programme: any) {      state.programme = programme    },    changeTime(state, time: any) {      state.time = time    }  },  getters: {},  actions: {    async getDataAction({ commit }) {      const dataResult = await getData()      commit('changeData', dataResult)    },    async getTimeAction({ commit }) {      const timeResult = await getTime()      commit('changeTime', timeResult)    },    async getStatusAction({ commit }) {      const statusResult = await getStatus()      commit('changeStatus', statusResult)    },    async getProgrammeAction({ commit }) {      const programmeResult = await getProgramme()      commit('changeProgramme', programmeResult)    }  },  modules: {}})export function useStore(): Store<IStoreType> {  return useVuexStore()}export default store